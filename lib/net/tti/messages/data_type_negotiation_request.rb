module Net
  module TTI
    class DataTypeNegotiationRequest < Message
      # BinData fields

      # Not sure why this is duplicated, but clients always send the same
      # character set in both fields.
      # Character sets:
      #  0x00b2 (178) - US-ASCII
      #  0x0369 (873) - UTF-8
      uint16le  :charset1
      uint16le  :charset2
      uint8     :unknown1
      uint8     :unknown2_length, :value => lambda { unknown2.length }
      string    :unknown2
      uint8     :unknown3_length, :value => lambda { unknown3.length }
      string    :unknown3
      string    :unknown4

tns_unhexify

      def _ttc_code()
        TTC_CODE_DATA_TYPE_NEGOTIATION
      end
      private :_ttc_code

      def self.create_request(platform, architecture)
        request = self.new

        case architecture
        when :x86
          request.character_set = 0x00b2
          request.unknown1 = 0x42
          request.unknown2 = "060101010F010106010101010101017FFF030A030701017F017FFF01090101BF01050600010704".tns_unhexify
          request.unknown3 = "02010000180003".tns_unhexify
          request.unknown4 = "800000003C3C3C800000000000000ED007".tns_unhexify
        when :x64
          request.character_set = 0x0369
          request.unknown1 = 0x02
          request.unknown2 = "060101010D010106010101010101017FFF030A030301007F017FFF010501013F01030600010301".tns_unhexify
          request.unknown3 = "02010000180003".tns_unhexify
          request.unknown4 = UNKNOWN4_LINUX
        else
          raise Exceptions::UnsupportedArchitecture.new( architecture )
        end

        return request
      end

      def character_set=(charset)
        self.charset1 = charset
        self.charset2 = charset
      end
    end
  end
end
